"""
–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
–ê–ò–° "–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫"
"""

class FunctionalTests:
    def __init__(self):
        self.passed = 0
        self.failed = 0
    
    def test_add_contact_functionality(self):
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
        try:
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–º–∏—Ç–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print("üß™ –¢–µ—Å—Ç: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞")
            print("   - –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è... ‚úì")
            print("   - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π... ‚úì")
            print("   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞... ‚úì")
            print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ... ‚úì")
            self.passed += 1
            return True
        except Exception as e:
            print(f"   - –û—à–∏–±–∫–∞: {e} ‚úó")
            self.failed += 1
            return False
    
    def test_search_functionality(self):
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ–∏—Å–∫–∞"""
        try:
            print("üß™ –¢–µ—Å—Ç: –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            print("   - –í–≤–æ–¥ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞... ‚úì")
            print("   - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞... ‚úì")
            print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤... ‚úì")
            self.passed += 1
            return True
        except Exception as e:
            print(f"   - –û—à–∏–±–∫–∞: {e} ‚úó")
            self.failed += 1
            return False
    
    def test_edit_functionality(self):
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            print("üß™ –¢–µ—Å—Ç: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞")
            print("   - –í—ã–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞... ‚úì")
            print("   - –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è... ‚úì")
            print("   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö... ‚úì")
            print("   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π... ‚úì")
            self.passed += 1
            return True
        except Exception as e:
            print(f"   - –û—à–∏–±–∫–∞: {e} ‚úó")
            self.failed += 1
            return False
    
    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"""
        print("üöÄ –ó–ê–ü–£–°–ö –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–• –¢–ï–°–¢–û–í")
        print("=" * 50)
        
        self.test_add_contact_functionality()
        self.test_search_functionality() 
        self.test_edit_functionality()
        
        print("=" * 50)
        print("üìä –ò–¢–û–ì–ò –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {self.passed}")
        print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {self.failed}")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(self.passed / (self.passed + self.failed)) * 100:.1f}%")

if __name__ == "__main__":
    tests = FunctionalTests()
    tests.run_all_tests()